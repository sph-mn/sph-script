#!/usr/bin/guile
!#

(import (sph filesystem) (sph hashtable)
  (sph io) (sph list)
  (sph alist) (sph number)
  (sph other) (sph process) (sph string) (sph vector) (sph) (sph cli) (rnrs io ports))

(define command-line-interface
  (cli-create #:options
    (list-q ((target-directory source-path ...) #:required? #t)
      (keep-directory-structure? #:names #\k))
    #:description "move files and replace the source paths with symlinks to the move destination"))

(define (move-and-link target-path source-path)
  "string ... -> (boolean ...)
   move source-path to target-path and replace original source-path"
  (let (target-path (path->full-path target-path))
    (and (ensure-directory-structure target-path)
      (execute-and-check-result "mv" "-t" target-path source-path)
      (execute-and-check-result "ln" "-s"
        (string-append (ensure-trailing-slash target-path) (basename source-path))
        (dirname source-path)))))

(define (move-and-link-cli)
  (let*
    ((cli-options (command-line-interface)) (source-paths (alist-ref cli-options (q source-path))))
    (if source-paths
      (let (target-directory (alist-ref cli-options (q target-directory)))
        (map
          (if (alist-ref-q cli-options keey-directory-structure?)
            (l (e) (move-and-link (path-append target-directory (dirname e)) e))
            (l (e) (move-and-link target-directory e)))
          source-paths))
      (command-line-interface (list "--help")))))

(move-and-link-cli)
