#!/usr/bin/guile
!#

(import (sph common) (sph cli) (sph time) (sph time string))

(define destination
  (string-append (getenv "HOME") "/temp/collections/collected." (utc->ymd (utc-current)) "/"))

(define description
  (string-append
    "symlinks or copies files into a automatically chosen target directory. the current destination directory is "
    (string-quote destination)))

; one use case is browsing files and using right click actions to collect files.
(define command-line-interface (cli-create #:description description (list-q (path ...))))

(define (collect-path a)
  (let (path-destination (string-append destination (basename a)))
    (or (false-if-exception (symlink a path-destination)) (copy-file a path-destination))))

(let (arguments (command-line-interface)) (ensure-directory-structure destination)
  (and-let* ((paths (alist-ref-q arguments path))) (each collect-path paths)))
