#!/usr/bin/guile
!#

(import (sph common) (sph cli) (sph io))

(define cli-parser
  (cli-create #:options
    (q
      ( (union #:names #\u) (intersection #:names #\i) (difference #:names #\d)
        (complement #:names #\c) ((file-path ...))))
    #:description
    "applies set operations to sets of lines of files and writes the result to standard output"))

(define (file-lines-set-operations-cli)
  (let*
    ( (a (cli-parser))
      (set-op
        (cond ((alist-ref-q a union) union) ((alist-ref-q a intersection) intersection)
          ((alist-ref-q a difference) difference) ((alist-ref-q a complement) complement) (else #f))))
    (if set-op
      (let
        (r
          (apply call-with-input-files
            (l files
              (fold (l (file r) (set-op (port->lines file) r)) (port->lines (first files))
                (tail files)))
            (alist-ref-q a file-path)))
        (each display-line r))
      (display-line "no set operation selected"))))

(file-lines-set-operations-cli)
