#!/usr/bin/guile
!#

"split at column-splitting character, default being spaces, and select a part by index.
 indices starting from one. ignores the tab character.
 depends on guile, guile-lib and sph-lib."

(import (string transform) (sph) (sph alist) (sph io) (sph stream) (srfi srfi-41) (ice-9 rdelim) (sph cli))
(define default-delimiter #\space)

(define (tabular-select column-delimiter indices text-port)
  (let
    ( (line-stream (port->stream text-port (l (ele) (read-line ele (q concat)))))
      (indices-count (length indices)))
    (stream-for-each
      (l (line)
        (let*
          ( (parts
              (filter! (l (ele) (not (string-null? ele)))
                (string-split (expand-tabs line 2) column-delimiter)))
            (selected-columns
              (let ((parts-last-index (- (length parts) 1)))
                (map
                  (l (ele)
                    (if (> ele parts-last-index) #f
                      (if (= ele parts-last-index)
                        ;drop the newline character of the line
                        (string-drop-right (list-ref parts ele) 1) (list-ref parts ele))))
                  indices))))
          (if (= 1 (length indices))
            (display (let ((part (first selected-columns))) (if part part "")))
            (write selected-columns)))
        (newline))
      line-stream)))

(define (tabular-select-cli)
  (let*
    ( (arguments
        ( (cli-create #:usage "tabular-select [options] index ..."
            #:options (q ((delimiter #:names (#\d) #:value-required? #t) ((index ...)))))))
      (indices (alist-ref arguments (q index))) (delimiter (alist-ref arguments (q delimiter))))
    (if (not (null? indices))
      (tabular-select
        (if delimiter (if (string? delimiter) (string-ref delimiter 0) delimiter) default-delimiter)
        (map (l (a) (- (string->number a) 1)) indices) (current-input-port)))))

(tabular-select-cli)
