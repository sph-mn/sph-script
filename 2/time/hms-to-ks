#!/usr/bin/guile
!#

(import (sph common) (ice-9 regex))
(define regexp-hms (make-regexp "([01]?[0-9]|2[0-3]):([0-5]?[0-9])(:[0-5]?[0-9])?"))

(define hms-description
  (list "converts all hh:[mm:[ss]] time values read from standard input to kiloseconds."
    "appends ks values in brackets to the hms values by default. for example \"23:59 (86.34)\""))

(define (hms-to-ks replace?)
  (port-lines-map->port
    (let
      (replacer
        (if replace?
          (l (match) (time-elapsed-day-string (time-from-hms-string (match:substring match)) 3 2))
          (l (match)
            (let (hms (match:substring match))
              (string-append hms " (" (time-elapsed-day-string (time-from-hms-string hms) 3 2) ")")))))
      (l (line) (regexp-replace line regexp-hms replacer)))))

(define (hms-to-ks-cli)
  (let
    (arguments
      ( (cli-create #:options (ql (replace #:names #\c #:description "replace"))
          #:description (string-join hms-description "\n  "))))
    (hms-to-ks (alist-q-ref arguments replace))))

(hms-to-ks-cli)
