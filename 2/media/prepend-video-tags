#!/usr/bin/guile
!#

(use-modules (srfi srfi-2) (sph string) (sph) (sph cli) (sph alist) (sph media-info))

(define prepend-video-quality-tags-description
  "prepend \"{shortest-pixel-side}p{frames-per-second}.\" to filenames.
   usage: prepend-video-tags path ...")

(define (rename-dry-run old new)
  (display-line (string-append (string-quote old) " -> " (string-quote new))))

(define (media-info-get-number media-info key)
  (let (a (alist-ref media-info key)) (if (string? a) (string->number a) a)))

(define (get-duration-string duration)
  (if duration
    (cond ((< duration 500) "d1") ((> duration 2500) "d3") ((> duration 5000) "d4") (else "d2")) "d0"))

(define (get-tag path with-duration)
  (let (media-info (media-info-video path))
    (and media-info
      (let
        ( (resolution (min (alist-ref media-info "height") (alist-ref media-info "width")))
          (duration (media-info-get-number media-info "duration"))
          (frames (media-info-get-number media-info "nb_frames")))
        (string-append
          (or (and with-duration (string-append (get-duration-string duration) "-")) "")
          (number->string resolution) "p"
          (or (and frames duration (number->string (inexact->exact (round (/ frames duration)))))
            ""))))))

(define (add-tag path tag dry-run)
  (let (new-path (string-append (dirname path) "/" tag "." (basename path)))
    (if (not (string-equal? new-path path)) ((if dry-run rename-dry-run rename-file) path new-path))))

(let (options ((cli-create #:options (q ((dry-run) (with-duration) ((paths ...)))))))
  (alist-bind options (paths dry-run with-duration)
    (each
      (l (path)
        (if (eq? (q regular) (stat:type (stat path)))
          (and-let* ((tag (get-tag path with-duration))) (add-tag path tag dry-run))))
      paths)))
