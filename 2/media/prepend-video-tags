#!/usr/bin/env guile
!#

(use-modules (srfi srfi-1) (sph string) (sph) (sph cli) (sph alist) (sph hashtable) (sph list) (sph media-info))

(define prepend-video-quality-tags-description
  "prepend strings to a filename that give information about video content like quality or duration.
   the current format is {pixel-height}p.{duration}s.
   usage: prepend-video-tags path ...")

(define (get-media-info path)
  (and-let* ((a (media-info-video path)))
    (fold
      (l (a result)
        (let
          (b
            (string-case (first a)
              (("duration") (pair (q duration) (inexact->exact (floor (string->number (tail a))))))
              (("height") (pair (q height) (tail a))) (else #f)))
          (if b (pair b result) result)))
      null a)))

(define (rename-dry-run old new)
  (display-line (string-append (string-quote old) " -> " (string-quote new))))

(define (create-tags-string data)
  (alist-bind data (height duration)
    (let
      (tags
        (compact
          (list (and height (string-append (number->string height) "p"))
            (and duration (string-append (number->string (round (/ duration 1000))) "ks")))))
      (string-join tags "." (q suffix)))))

(define (prepend-video-tags paths dry-run)
  (each
    (l (path) (get-media-info path)
      (and-let* ((data (get-media-info path)) (tags-string (create-tags-string data)))
        (if (not (string-null? tags-string))
          ( (if dry-run rename-dry-run rename-file) path
            (string-append (dirname path) "/" tags-string (basename path))))))
    paths))

(let (cli (cli-create #:options (list-q (dry-run) ((paths ...)))))
  (alist-bind (cli) (paths dry-run) (prepend-video-tags paths dry-run)))
