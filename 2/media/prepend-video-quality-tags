#!/usr/bin/env guile
!#

(import (sph base) (sph media-info))

(define prepend-video-quality-tags-description
  "prepend strings to a filename that quantify the quality of the encoded video.
   the current format is width + height + bitrate, a framerate and a codec factor")

(define-as codec-rating ht-create
  "h265" 10 "hevc" 10 "vp9" 9 "h264" 9 "vp8" 8 "dvix" 7 "xvid" 7 "wmv" 9 "wmv2")

(define base-pxs 3000)
(define base-fr 25)
(define (div a b) (if (zero? b) b (/ a b)))

(define (calculate-rating width height codec framerate)
  (let
    ( (pxs (* 1000 (div (+ width height) base-pxs))) (codec (* 10 (ht-ref codec-rating codec 7)))
      (fr (* 10 (div framerate base-fr))))
    (inexact->exact (round (+ pxs codec fr)))))

(define (run)
  (let*
    ( (paths (tail (program-arguments)))
      (data->framerate
        (l (a)
          (false-if-exception
            (inexact->exact
              (round (exact->inexact (string->number (alist-ref a "avg_frame_rate"))))))))
      (data->width (l (a) (false-if-exception (alist-ref a "width"))))
      (data->height (l (a) (false-if-exception (alist-ref a "height"))))
      (data->codec (l (a) (false-if-exception (alist-ref a "codec_name")))))
    (each
      (l (path)
        (let (data (media-info-video path))
          (and-let*
            ( (framerate (data->framerate data)) (width (data->width data))
              (height (data->height data)) (codec (data->codec data))
              (rating (calculate-rating width height codec framerate)))
            (rename-file path
              (string-append (dirname path) "/q" (number->string rating) "." (basename path))))))
      paths)))

(run)
