#!/usr/bin/guile
!#

(import (sph common) (zenity))
;usage: path-file-to-move ...
;asks for a target path

#;(define (string-numbers-multiply-zenity)
  (let (entry-result (zenity-entry "enter new text:"))
    (if entry-result
      (begin (zenity-info (string-numbers-multiply entry-result)) (string-numbers-multiply-zenity)))))

(define path-config-temp "/tmp/gui-move-into-directory-config")

(define (get-last-used-directory)
  (and (file-exists? path-config-temp)
    (call-with-input-file path-config-temp (l (port) (read port)))))

(define (set-last-used-directory a)
  (call-with-output-file path-config-temp (l (port) (write a port))))

(define (get-entry-text-option) "")

(define (move-into-directory-zenity paths)
  (if (not (null? paths))
    (let*
      ( (last-used (get-last-used-directory))
        (entry-text-option
          (if last-used (string-append " " (cli-option "entry-text" last-used)) ""))
        (path-directory
          (string-trim-right
            (shell-eval->string (string-append "zenity --entry" entry-text-option)))))
      (if (> (string-length path-directory) 0)
        (begin
          (if (not (string-equal? last-used path-directory))
            (set-last-used-directory path-directory))
          (apply execute "move-into-directory" path-directory paths))))))

(move-into-directory-zenity (tail (program-arguments)))
